<?php
/**
 * @file Provides sample scripts that demonstrate the capabilities of the Voip Drupal platform
 */ 

foreach (array('voipscriptsamples_weather.inc') as $file) {
  require_once(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'includes' . DIRECTORY_SEPARATOR . $file);
}

/**
 * Implementation of hook_voipscript_load_script()
 */
function voipscriptsamples_voipscript_load_script($script_name, $params=NULL) {
  $script = _voipscriptsamples_load_sample_scripts($script_name);
  return $script;
}


/*
 * Sample scripts that highlight Voip Drupal capabilities
 */
function _voipscriptsamples_load_sample_scripts($script_name) {
  if($script_name == 'voipscript_weather_report') {
    $script = _voipscriptsamples_get_weather_report();
  }
  
  if($script_name == 'voipscript_gosub_test_a') {
    $script = new VoipScript('voipscript_gosub_test_a');
    $script->addSay('script a');
    $script->addGosub('voipscript_gosub_test_b');
    $script->addSay('back in script a');
    $script->addSay('bye bye');
    $script->addHangup();
  }

  if($script_name == 'voipscript_gosub_test_b') {
    $script = new VoipScript('voipscript_gosub_test_b');
    $script->addSay('script b');
    $script->addReturn();
  }

  if($script_name == 'voipscript_dial_test') {
    $script = _voipscriptsamples_get_dial_test_script();
  }

  if($script_name == 'voipscript_record') {
    $script = _voipscriptsamples_get_record_script();
  }

  return $script;
}


function _voipscriptsamples_get_dial_test_script() {
    $script = new VoipScript('voipscript_test');

    $script->addLabel('start');
    $script->addSay("Welcome to the Voip Drupal platform!");

    $script->addLabel('get input');

    $text = "To connect with the system developers, press 1.  To hangup, press the pound key.";
    $url = ''; // 'http://demo.twilio.com/hellomonkey/monkey.mp3';
    $timeout = 5;
    $end_key = '';
    $num_digits = 1;
    $script->addGetInput($text, $url, $timeout, $end_key, $num_digits);
    $script->addSay('You pressed: %input_digits');
    $script->addSet('user_input', '%input_digits');
    $script->addSay('The variable \'user input\' is now set to %user_input');

    $script->addGotoIf('end call', "^%input_digits == '#'");

    $script->addGotoIf('no input received', "^%input_digits == " . VoipScript::NO_INPUT);

//TODO: ask caller to input a 10-digit number
    $script->addSay('Dialing...'); 
    $number = '1234567890';
    $script->addDial($number);
    $script->addGoto('start');

    $script->addLabel('no input received');
    $script->addSay('No input received. Please try again.');
    $script->addGoto('get input');

    $script->addLabel('end call');
    $script->addSay('Bye bye');
    $script->addHangup();

    return $script;
  }


function _voipscriptsamples_get_record_script() {
  $script = new VoipScript('voipscript_record');

  $script->addLabel('start');
  $script->addSay("Please record your message after the beep.  When done, press the pound key.");
  $timeout = 5;
  $end_key = '#';
  $max_length = 20;
  $script->addRecord($timeout, $end_key, $max_length);

  $script->addSay('You said ');
  $script->addPlay('%recording_url');

  $script->addLabel('accept menu');
  $text = "To accept this recording, press 1.  To record it once again, press 2. To hangup, press the pound key.";
  $url = '';
  $timeout = 5;
  $end_key = '';
  $num_digits = 1;
  $script->addGetInput($text, $url, $timeout, $end_key, $num_digits);

  $script->addGotoIf('accept recording', "^%input_digits == '1'");

  $script->addGotoIf('start', "^%input_digits == '2'");

  $script->addGotoIf('end call', "^%input_digits == '#'");

  $script->addSay('Invalid input received. Please try again.');
  $script->addGoto('accept menu');

  $script->addLabel('accept recording');
  $script->addSay('About to start processing the recorded file.');
  $script->addSet('callback_result',
    '^_voipscriptsamples_record_callback(%call_id, %recording_url, %recording_duration)');
  $script->addSay('The callback returned: %callback_result');
  $script->addGoto('end call');

  $script->addLabel('no input received');
  $script->addSay("No input received. Please try again.");
  $script->addGoto('start');

  $script->addLabel('end call');
  $script->addSay('Bye bye.');
  $script->addHangup();

  return $script;
}

/**
 * Callback function associated with the script voipscript_record.  It is called
 * whenever that script records a new entry from the user.
 */
function _voipscriptsamples_record_callback($call_id, $recording_url, $recording_duration=NULL) {
watchdog('voipscriptsamples', "in _voipscriptsamples_record_callback($call_id, $recording_url, $recording_duration)");

  return 'Success';
}


