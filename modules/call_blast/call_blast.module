<?
/**
 * @file
 *   Implement VOIP call blast to a list of user-defined phone numbers.
 */ 

/**
 * Implementation of hook_voip_get_script().
 */
function call_blast_voip_get_script() {
  require_once('hello_world.xml');
}

/**
 * On cron, run call blasts.
 * 
 * TODO Add test call before running call blast.
 * TODO Enable user to schedule date/time for test call and blast.
 * 
 * Implementation of hook_cron().
 */
function call_blast_cron() {
  // check for call blasts that have been scheduled but not sent
  $sql = "SELECT n.nid, n.vid " 
        ."FROM {node} n " 
        ."JOIN {content_type_call_blast} cb ON n.nid = cb.nid "
        ."WHERE field_blast_sent_value = 0";
  $result = db_query($sql);

  // loop through unblasted blast lists and blast them
  while ($row = db_fetch_object($result)) {
    $nid = $row->nid;
    $vid = $row->vid;

    // get list of phone numbers for the current call blast list
    $sql = "SELECT field_blast_phone_num_value "
          ."FROM content_field_blast_phone_num "
          ."WHERE nid = %d "
          ."AND vid = %d " ;
    $result2 = db_query($sql, $nid, $vid);

    // Add each number from the blast call list to $options, to be sent to voip.
    // Clear out $options, in case there is an old list stored here.
    $options = array();
    while ($num = db_result($result2)) {
      $options['phone_list'][] = $num;
    }

    // TODO User (creator of blast) needs a way to determine script called here.
    $options['script_name'] = 'hello.xml';

    // $request_id, Type of call being requested, 'call list'.
    $request_id = 'call list';

    // place outgoing call
    voip_send_request($request_id, $options);

    // Update node to indicate that blast has been sent.
    db_query("UPDATE {content_type_call_blast} "
            ."SET field_blast_sent_value = 1 " 
            ."WHERE nid = %d " 
            ."AND vid = %d ",
             $nid, $vid);
    // Clear cache to reflect update.
    cache_clear_all('content:'. $nid .':'. $vid, content_cache_tablename()); 
 
    // Log call blast with watchdog
    $type = 'call blast';
    $message = t("Call blast nid-$nid sent.");
    $severity = WATCHDOG_NOTICE;
    watchdog($type, $message);
  }
}
