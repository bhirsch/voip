<?php
/**
 * @file test Voip Drupal hooks.
 */ 

foreach (array('voiptest_weather.inc') as $file) {
  require_once(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'includes' . DIRECTORY_SEPARATOR . $file);
}


/**
 * Implementation of hook_voipcall_load_script()
 */
function voiptest_voipcall_load_script($voipcall, $script_name) {
  if($script_name == 'voiptest_test') {
    $script = array();
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'start'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => t("Welcome to the Voip Drupal platform!")),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'gather'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GATHER,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => t("To connect with the system developers, press 1.  To hangup, press the pound key.")),
//        'url' => array(VOIPCALL_VAL => 'http://demo.twilio.com/hellomonkey/monkey.mp3'),
        'num_digits' => array(VOIPCALL_VAL => 1),
        'end_key' => array(VOIPCALL_VAL => ""),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "You pressed: "),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAR => "gather_digits"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SET,
      VOIPCALL_CMD_BODY => array(
        'var_name' => array(VOIPCALL_VAL => "user input"),
        'var_value' => array(VOIPCALL_VAR => "gather_digits"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "The variable 'user input' is now set to "),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAR => "user input"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTOIF,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'end call'),
        // Note: variable names have to be enclosed in between '@<'and '>@'
        'expression' => array(VOIPCALL_EVAL => "@<gather_digits>@ == '#'"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTOIF,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'no input received'),
        // Note: variable names have to be enclosed in between '@<'and '>@'
        'expression' => array(VOIPCALL_EVAL => "@<gather_digits>@ == " . VOIPCALL_NO_INPUT),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "Dialing Leo's cellphone number "),
      ),
    );
/****
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_DIAL,
      VOIPCALL_CMD_BODY => array(
        'number' => array(VOIPCALL_VAL => "6177920995"),
      ),
    );
****/
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTO,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'start'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'no input received'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "No input received. Please try again."),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTO,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'gather'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'end call'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
       'text' => array(VOIPCALL_VAL => "Bye bye."),
       ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_HANGUP
    );
  }


  if($script_name == 'voiptest_record') {
    $script = array();
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'start'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => t("Please record your message after the beep.  When done, press the pound key.")),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_RECORD,
      VOIPCALL_CMD_BODY => array(
        'max_length' => array(VOIPCALL_VAL => '20'),
        'end_key' => array(VOIPCALL_VAL => '#'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "You said "),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_PLAY,
      VOIPCALL_CMD_BODY => array(
        'url' => array(VOIPCALL_VAR => 'recording_url'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'accept menu'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GATHER,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => t("To accept this recording, press 1.  To record it once again, press 2. To hangup, press the pound key.")),
        'num_digits' => array(VOIPCALL_VAL => 1),
        'end_key' => array(VOIPCALL_VAL => ""),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTOIF,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'accept recording'),
        // Note: variable names have to be enclosed in between '@<'and '>@'
        'expression' => array(VOIPCALL_EVAL => "@<gather_digits>@ == '1'"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTOIF,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'start'),
        // Note: variable names have to be enclosed in between '@<'and '>@'
        'expression' => array(VOIPCALL_EVAL => "@<gather_digits>@ == '2'"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTOIF,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'end call'),
        // Note: variable names have to be enclosed in between '@<'and '>@'
        'expression' => array(VOIPCALL_EVAL => "@<gather_digits>@ == '#'"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "Invalid input received. Please try again."),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTO,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'accept menu'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'accept recording'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "About to start processing the recorded file."),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SET,
      VOIPCALL_CMD_BODY => array(
        'var_name' => array(VOIPCALL_VAL => "callback result"),
        // NOTE: Do not add a ';' at the end of the function call.  That will result in a runtime error.
        'var_value' => array(VOIPCALL_EVAL => "voiptest_record_callback(@<call_id>@, @<recording_url>@, @<recording_duration>@)"),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "The callback returned: "),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAR => "callback result"),
      ),
    );

    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_HANGUP,
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'no input received'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
        'text' => array(VOIPCALL_VAL => "No input received. Please try again."),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_GOTO,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'start'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_LABEL,
      VOIPCALL_CMD_BODY => array(
        'label_name' => array(VOIPCALL_VAL => 'end call'),
      ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_SAY,
      VOIPCALL_CMD_BODY => array(
       'text' => array(VOIPCALL_VAL => "Bye bye."),
       ),
    );
    $script[] = array(
      VOIPCALL_CMD_ID => VOIPCALL_HANGUP
    );

  }


  if($script_name == 'voiptest_weather_report') {
    $script = _voiptest_get_weather_report();
  }

  return $script;
}


/**
 * Callback function associated with the script voiptest_record.  It is called whenever that script records a new entry from the user.
 */
function voiptest_record_callback($call_id, $recording_url, $recording_duration=NULL) {
watchdog('voiptest', "in voiptest_record_callback($call_id, $recording_url, $recording_duration)");

  return TRUE;
}

/**
 * Implementation of hook_voip_process_request().
 *
 * TODO: The following function has already been deprecated.  It's only here until we update the voip_asterisk module.
 */
function voiptest_voip_process_request($request_id, $options) {
  $response = NULL;

  switch($request_id) {
    case 'voip_get_script':
      switch ($options['script_name']){
        case 'hello_world':
          $response['$request_id'] = $request_id;
          $response['$options'] = $options;
          $response['script_contents'] =
            '<?xml version="1.0"?>' . 
            "<voip_script name='hello_world'>
              <say><text>Hello, world!</text></say>
              <goto>bye_bye</goto>
            </voip_script>";
          break;
        case 'bye_bye':
          $response['$request_id'] = $request_id;
          $response['$options'] = $options;
          $response['script_contents'] =
            '<?xml version="1.0"?>' . 
            "<voip_script name='bye_bye'>
              <say><text>Nice meeting you.  Goodbye!</text></say>
              <hangup></hangup>
            </voip_script>";
          break;
      }
      break;
  }

  return $response;
}

/*
function voiptest_nodeapi(&$node, $op, $teaser, $page) {
  if ($op == 'view') {
    dsm($node);
  }
}
// */

/* 
function voiptest_form_alter(&$form, &$form_state, $form_id) {
// dsm($form_id);

  if ($form_id == 'node_type_form') {
    dsm($form);
   
    $ops = variable_get('node_options_voip_extension', false);
    dsm($ops);
  }
}
// */
