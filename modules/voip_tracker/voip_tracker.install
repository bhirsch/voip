<?php
// $Id$

/**
 * Implementation of hook_install()
 *
 * This will automatically install the database tables for the Voip Tracker
 * module for the MySQL database.
 *
 * If you are using another database, you will have to install the
 * tables by hand, using the queries below as a reference.
 *
 * Note that the curly braces around table names are a drupal-specific
 * feature to allow for automatic database table prefixing, and will
 * need to be removed.
 */
function voip_tracker_install() {
  $ret = drupal_install_schema('voip_tracker');

  $failed = array();
  foreach ($ret as $query) {
  	if (!$query['success']) {
  	  $failed[] = $query['query'];
  	}
  }
  if (empty($failed)) {
    drupal_set_message(t('Voip Tracker module installed successfully.'));
  }
  else {
    drupal_set_message(t('Table installation for the Voip Tracker module was unsuccessful. The following queries failed: !queries', array('!queries' => theme('item_list', $failed))), 'error');
  }
}

/**
* Implementation of hook_schema().
*/
function voip_tracker_schema() {

  $schema['voip_tracker_call_list'] = array(
    'description' => t('Storage table for Voip Drupal calls.'),
    'fields' => array(
      'tracker_id' => array(
        'description' => t('The primary identifier for tracked rows.'),
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'call_id' => array(
        'description' => t('The primary identifier for a call.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'caller_number' => array(
        'description' => t('The number intiating the call.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'callee_number' => array(
        'description' => t('The number receiving the call.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'module' => array(
        'description' => t('The module initiating the call.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => t('The uid of the user placing the call.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'script_name' => array(
        'description' => t('The name of the script currently being requested.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'vars' => array(
        'description' => t('A serialized array of variables to be used by the script being requested.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'call_status' => array(
        'description' => t('The current status of the call.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => 'uncalled',
      ),
      'dispatch_time' => array(
        'description' => t('Time the call was placed or updated (timestamp).'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tracker_id'),
    'indexes' => array(
      'call_id' => array('call_id'),
    ),
  );

  return $schema;
}


/**
 * UTF8 table update
 */
function voip_tracker_update_1() {
  return _system_update_utf8(array('voip_tracker_call_list'));
}

/**
 * Implementation of hook_uninstall().
 *
 */
function voip_tracker_uninstall() {

  // Drop tables.
  drupal_uninstall_schema('voip_tracker');

  // Drop variables.
  $variables = array(
// TODO: list variables to be deleted here
  );
  foreach ($variables as $variable) {
  	variable_del($variable);
  }

  drupal_set_message(t('Voip Tracker module uninstalled successfully.'));
}
